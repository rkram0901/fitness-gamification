[{"C:\\Users\\631181\\fitness-gamification\\src\\index.js":"1","C:\\Users\\631181\\fitness-gamification\\src\\reportWebVitals.js":"2","C:\\Users\\631181\\fitness-gamification\\src\\App.js":"3","C:\\Users\\631181\\fitness-gamification\\src\\landing.js":"4","C:\\Users\\631181\\fitness-gamification\\src\\header.js":"5","C:\\Users\\631181\\fitness-gamification\\src\\gamescreen.js":"6","C:\\Users\\631181\\fitness-gamification\\src\\hometile.js":"7","C:\\Users\\631181\\fitness-gamification\\src\\timer.js":"8","C:\\Users\\631181\\fitness-gamification\\src\\landingTile.js":"9","C:\\Users\\631181\\fitness-gamification\\src\\constant.js":"10","C:\\Users\\631181\\latest\\fitness-gamification\\src\\index.js":"11","C:\\Users\\631181\\latest\\fitness-gamification\\src\\reportWebVitals.js":"12","C:\\Users\\631181\\latest\\fitness-gamification\\src\\App.js":"13","C:\\Users\\631181\\latest\\fitness-gamification\\src\\landingTile.js":"14","C:\\Users\\631181\\latest\\fitness-gamification\\src\\constant.js":"15","C:\\Users\\631181\\latest\\fitness-gamification\\src\\landing.js":"16","C:\\Users\\631181\\latest\\fitness-gamification\\src\\header.js":"17","C:\\Users\\631181\\latest\\fitness-gamification\\src\\gamescreen.js":"18","C:\\Users\\631181\\latest\\fitness-gamification\\src\\hometile.js":"19","C:\\Users\\631181\\latest\\fitness-gamification\\src\\timer.js":"20","C:\\Users\\631181\\latest\\fitness-gamification\\src\\architecture.js":"21"},{"size":552,"mtime":1682414717251,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1682414717256,"results":"24","hashOfConfig":"23"},{"size":627,"mtime":1682415220661,"results":"25","hashOfConfig":"23"},{"size":984,"mtime":1682433916220,"results":"26","hashOfConfig":"23"},{"size":458,"mtime":1682419635479,"results":"27","hashOfConfig":"23"},{"size":874,"mtime":1682433216673,"results":"28","hashOfConfig":"23"},{"size":6463,"mtime":1682435346876,"results":"29","hashOfConfig":"23"},{"size":3209,"mtime":1682436117800,"results":"30","hashOfConfig":"23"},{"size":7193,"mtime":1682435623024,"results":"31","hashOfConfig":"23"},{"size":228,"mtime":1682434502087,"results":"32","hashOfConfig":"23"},{"size":619,"mtime":1682497396732,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1682414717256,"results":"35","hashOfConfig":"34"},{"size":627,"mtime":1682497274352,"results":"36","hashOfConfig":"34"},{"size":9555,"mtime":1682655868912,"results":"37","hashOfConfig":"34"},{"size":228,"mtime":1682496695166,"results":"38","hashOfConfig":"34"},{"size":1243,"mtime":1682656198111,"results":"39","hashOfConfig":"34"},{"size":351,"mtime":1682655868861,"results":"40","hashOfConfig":"34"},{"size":1540,"mtime":1682656246689,"results":"41","hashOfConfig":"34"},{"size":7185,"mtime":1682655868886,"results":"42","hashOfConfig":"34"},{"size":3678,"mtime":1682655868938,"results":"43","hashOfConfig":"34"},{"size":1176,"mtime":1682655868819,"results":"44","hashOfConfig":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ndjd9u",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"41imq7",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"81"},"C:\\Users\\631181\\fitness-gamification\\src\\index.js",[],[],"C:\\Users\\631181\\fitness-gamification\\src\\reportWebVitals.js",[],[],"C:\\Users\\631181\\fitness-gamification\\src\\App.js",["113"],[],"C:\\Users\\631181\\fitness-gamification\\src\\landing.js",["114","115"],[],"C:\\Users\\631181\\fitness-gamification\\src\\header.js",[],[],"C:\\Users\\631181\\fitness-gamification\\src\\gamescreen.js",["116"],[],"C:\\Users\\631181\\fitness-gamification\\src\\hometile.js",["117","118","119","120"],[],"C:\\Users\\631181\\fitness-gamification\\src\\timer.js",["121","122"],[],"C:\\Users\\631181\\fitness-gamification\\src\\landingTile.js",[],[],"C:\\Users\\631181\\fitness-gamification\\src\\constant.js",[],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\index.js",[],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\App.js",["123"],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\landingTile.js",["124"],[],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport Header from \"./header.js\";\r\nimport Landing from \"./landing.js\";\r\nimport Architecture from \"./architecture.js\";\r\nimport \"./App.css\";\r\nimport * as Constants from \"./constant.js\";\r\nimport architecture from \"./images/architecture.svg\";\r\n\r\nclass LandingTile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isGameLanding: false,\r\n      stepDetails: [],\r\n      gameTimingDetails: {},\r\n      selectedUserName: \"\",\r\n      isShowArch: false,\r\n    };\r\n\r\n    this.handleNameClick = this.handleNameClick.bind(this);\r\n    this.navigateToHome = this.navigateToHome.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    this.postSteps = this.postSteps.bind(this);\r\n    this.handleShowArch = this.handleShowArch.bind(this);\r\n  }\r\n\r\n  postSteps() {\r\n    const request = {\r\n      stepsCount: 50,\r\n    };\r\n    axios.post(\"https://syncwatch.azurewebsites.net/steps\", request);\r\n  }\r\n\r\n  handleBack() {\r\n    this.setState({ isGameLanding: false, isShowArch: false});\r\n  }\r\n\r\n  async navigateToHome(userName) {\r\n    let userId = _.filter(Constants.user, { name: userName })[0].id;\r\n    await axios.post(Constants.router.baseUrl + \"/steps/reset/\" + userId);\r\n    this.setState({ isGameLanding: false });\r\n  }\r\n\r\n  handleNameClick(stepDetails, selectedUserName) {\r\n    let gameTimingDetails = this.getGameTimingDetails(stepDetails);\r\n    this.setState({ isGameLanding: true, gameTimingDetails, selectedUserName });\r\n  }\r\n\r\n  getGameTimingDetails(stepDetails) {\r\n    let gameTimingDetails = {\r\n      userId: stepDetails.id,\r\n      steps: stepDetails.stepsCount,\r\n    };\r\n    gameTimingDetails.gameOneTime = this.secondsToTime(\r\n      stepDetails.stepsCount * 2\r\n    );\r\n    gameTimingDetails.gameTwoTime = this.secondsToTime(stepDetails.stepsCount);\r\n    gameTimingDetails.gameThreeTime = this.secondsToTime(\r\n      stepDetails.stepsCount * 1.5\r\n    );\r\n    return gameTimingDetails;\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n    return (\r\n      (hours > 9 ? hours : \"0\" + hours) +\r\n      \":\" +\r\n      (minutes > 9 ? minutes : \"0\" + minutes) +\r\n      \":\" +\r\n      (seconds > 9 ? seconds : \"0\" + seconds)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    this.getStepDetails();\r\n    this.timerId = setInterval(() => this.getStepDetails(), 3000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n\r\n  async getStepDetails() {\r\n    const response = await axios.get(Constants.router.baseUrl + \"/steps\");\r\n    if (response && response.data)\r\n      this.setState({ stepDetails: response.data });\r\n  }\r\n\r\n  handleShowArch() {\r\n    this.setState({ isShowArch: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header isShowArch={true} />\r\n        {this.state.isGameLanding ? (\r\n          <Landing\r\n            gameTimingDetails={this.state.gameTimingDetails}\r\n            selectedUserName={this.state.selectedUserName}\r\n            navigateToHome={this.navigateToHome}\r\n            handleBack={this.handleBack}\r\n          />\r\n        ) : this.state.isShowArch ? (\r\n          <Architecture handleBack={this.handleBack} />\r\n        ) : (\r\n          <Grid container>\r\n            <Grid container>\r\n              <Grid item xs={3}></Grid>\r\n              <Grid item xs={6} className=\"cardstyle border-left-primary-blue\">\r\n                <div\r\n                  onClick={() => {\r\n                    this.handleNameClick(\r\n                      this.state.stepDetails[0],\r\n                      \"Filkins, Kathleen R\"\r\n                    );\r\n                  }}\r\n                >\r\n                  <Grid container spacing={{ xs: 2, md: 3 }}>\r\n                    <Grid item xs={1} sm={4} md={4}>\r\n                      <div>\r\n                        <i className=\"fa fa-duotone fa-user  fa-4x text-gray-300\"></i>\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography className=\"cardnameheading colorblue\">\r\n                        Filkins, Kathleen R\r\n                      </Typography>\r\n                      <div style={{paddingTop: '10px'}}>\r\n                        {this.state.stepDetails &&\r\n                        this.state.stepDetails[0] &&\r\n                        this.state.stepDetails[0].stepsCount\r\n                          ? this.state.stepDetails[0].stepsCount\r\n                          : 0}\r\n                      </div>\r\n                      <Typography >\r\n                        Steps\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={4} md={4}>\r\n                      <div>\r\n                        <i class=\"fa fa-solid fa-flash fa-4x text-gray-300\"></i>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={3}></Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs={3}></Grid>\r\n              <Grid item xs={6} className=\"cardstyle border-left-success-green\">\r\n                <div\r\n                  onClick={() => {\r\n                    this.handleNameClick(\r\n                      this.state.stepDetails[1],\r\n                      \"Briggs, Leah\"\r\n                    );\r\n                  }}\r\n                >\r\n                  <Grid container spacing={{ xs: 2, md: 3 }}>\r\n                    <Grid item xs={1} sm={4} md={4}>\r\n                      <div>\r\n                        <i className=\"fa fa-duotone fa-user  fa-4x text-gray-300\"></i>\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography className=\"cardnameheading colorsuccess\">\r\n                        Briggs, Leah\r\n                      </Typography>\r\n                      <div style={{paddingTop: '10px'}}>\r\n                        {this.state.stepDetails &&\r\n                        this.state.stepDetails[1] &&\r\n                        this.state.stepDetails[1].stepsCount\r\n                          ? this.state.stepDetails[1].stepsCount\r\n                          : 0}\r\n                      </div>\r\n                      <Typography >\r\n                        Steps\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={4} md={4}>\r\n                      <div>\r\n                        <i class=\"fa fa-solid fa-flash fa-4x text-gray-300\"></i>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={3}></Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs={3}></Grid>\r\n              <Grid item xs={6} className=\"cardstyle border-left-info\">\r\n                <div\r\n                  onClick={() => {\r\n                    this.handleNameClick(\r\n                      this.state.stepDetails[2],\r\n                      \"Powell, Ed\"\r\n                    );\r\n                  }}\r\n                >\r\n                  <Grid container spacing={{ xs: 2, md: 3 }}>\r\n                    <Grid item xs={1} sm={4} md={4}>\r\n                      <div>\r\n                        <i className=\"fa fa-duotone fa-user  fa-4x text-gray-300\"></i>\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography className=\"cardnameheading colorinfo\">\r\n                        Powell, Ed\r\n                      </Typography>\r\n                      <div style={{paddingTop: '10px'}}>\r\n                        {this.state.stepDetails &&\r\n                        this.state.stepDetails[2] &&\r\n                        this.state.stepDetails[2].stepsCount\r\n                          ? this.state.stepDetails[2].stepsCount\r\n                          : 0}\r\n                      </div>\r\n                      <Typography >\r\n                        Steps\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={4} md={4}>\r\n                      <div>\r\n                        <i class=\"fa fa-solid fa-flash fa-4x text-gray-300\"></i>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={3}></Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs={10} />\r\n              <Grid item xs={1} >\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"#2F78C4\",\r\n                    textTransform: \"none\",\r\n                  }}\r\n                  onClick={() => {\r\n                    this.handleShowArch();\r\n                  }}\r\n                >\r\n                  <img src={architecture} />\r\n                  Architecture\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={1} />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingTile;\r\n","C:\\Users\\631181\\latest\\fitness-gamification\\src\\constant.js",[],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\landing.js",["125"],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\header.js",[],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\gamescreen.js",["126","127"],[],"C:\\Users\\631181\\latest\\fitness-gamification\\src\\hometile.js",["128","129","130","131","132"],[],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Fragment } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./App.css\";\r\nimport games from \"./images/games.svg\";\r\nimport arrow_back_ios_new from \"./images/arrow_back_ios_new.svg\";\r\n\r\nclass HomeTile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Grid container>\r\n          <Grid item xs={3}></Grid>\r\n          <Grid item xs={6} style={{ padding: \"10px\" }}>\r\n            <Typography style={{ color: \"#5a5c69\", fontSize: \"30px\" }}>\r\n              Get Fit to Play Game as you wish\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}></Grid>\r\n        </Grid>\r\n        <Grid container style={{ padding: \"10px\" }}>\r\n          <Grid item xs={4} style={{ padding: \"10px\" }}>\r\n            <Card className=\"card\">\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"headline\"\r\n                  component=\"h2\"\r\n                  className=\"cardheading\"\r\n                  style={{ color: \"#4e73df\" }}\r\n                >\r\n                  HEXTRIS\r\n                </Typography>\r\n                <img src={games} style={{ width: \"40px\" }} />\r\n                {this.props.gameTimingDetails && (\r\n                  <div>\r\n                    <Typography component=\"p\">\r\n                      Steps:{\" \"}\r\n                      {this.props.gameTimingDetails.steps\r\n                        ? this.props.gameTimingDetails.steps\r\n                        : 0}\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                      Timing: {this.props.gameTimingDetails.gameOneTime}\r\n                    </Typography>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n              <CardActions>\r\n                {this.props.gameTimingDetails.steps > 0 && (\r\n                  <Button\r\n                    style={{\r\n                      color: \"#FFFFFF\",\r\n                      backgroundColor: \"#4e73df\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                    onClick={() => {\r\n                      this.props.openPlayScreen(\r\n                        this.props.gameTimingDetails.gameOneTime,\r\n                        \"https://main.dzr2qnbu9dvmr.amplifyapp.com/\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    Play\r\n                  </Button>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} style={{ padding: \"10px\" }}>\r\n            <Card className=\"card\">\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"headline\"\r\n                  component=\"h2\"\r\n                  className=\"cardheading\"\r\n                  style={{ color: \"#1cc88a\" }}\r\n                >\r\n                  GOBLIN SLAYER\r\n                </Typography>\r\n                <img src={games} style={{ width: \"40px\" }} />\r\n                {this.props.gameTimingDetails && (\r\n                  <div>\r\n                    <Typography component=\"p\">\r\n                      Steps:{\" \"}\r\n                      {this.props.gameTimingDetails.steps\r\n                        ? this.props.gameTimingDetails.steps\r\n                        : 0}\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                      Timing: {this.props.gameTimingDetails.gameTwoTime}\r\n                    </Typography>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n              <CardActions>\r\n                {this.props.gameTimingDetails.steps > 0 && (\r\n                  <Button\r\n                    style={{\r\n                      color: \"#FFFFFF\",\r\n                      backgroundColor: \"#1cc88a\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                    onClick={() => {\r\n                      this.props.openPlayScreen(\r\n                        this.props.gameTimingDetails.gameTwoTime,\r\n                        \"https://goblinslayer.s3.ap-south-1.amazonaws.com/index.html\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    Play\r\n                  </Button>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} style={{ padding: \"10px\" }}>\r\n            <Card className=\"card\">\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"headline\"\r\n                  component=\"h2\"\r\n                  className=\"cardheading\"\r\n                  style={{ color: \"#36b9cc\" }}\r\n                >\r\n                  CAR RACER\r\n                </Typography>\r\n                <img src={games} style={{ width: \"40px\" }} />\r\n                {this.props.gameTimingDetails && (\r\n                  <div>\r\n                    <Typography component=\"p\">\r\n                      Steps:{\" \"}\r\n                      {this.props.gameTimingDetails.steps\r\n                        ? this.props.gameTimingDetails.steps\r\n                        : 0}\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                      Timing: {this.props.gameTimingDetails.gameThreeTime}\r\n                    </Typography>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n              <CardActions>\r\n                {this.props.gameTimingDetails.steps > 0 && (\r\n                  <Button\r\n                    style={{\r\n                      color: \"#FFFFFF\",\r\n                      backgroundColor: \"#36b9cc\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                    onClick={() => {\r\n                      this.props.openPlayScreen(\r\n                        this.props.gameTimingDetails.gameThreeTime,\r\n                        \"https://carracer.s3.ap-south-1.amazonaws.com/index.html\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    Play\r\n                  </Button>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={1} style={{ paddingTop: \"80px\", paddingLeft: \"15px\" }}>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"#2F78C4\",\r\n                textTransform: \"none\",\r\n              }}\r\n              onClick={() => {\r\n                this.props.handleBack();\r\n              }}\r\n            >\r\n              <img src={arrow_back_ios_new} />\r\n              Back\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={11} />\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeTile;\r\n","C:\\Users\\631181\\latest\\fitness-gamification\\src\\timer.js",["133","134","135","136"],[],"import { Button, DialogActions, DialogTitle, Dialog } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: this.props.timings ? this.props.timings : \"00:00:30\",\r\n      endGame: false,\r\n    };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.navigateToHome = this.navigateToHome.bind(this);\r\n  }\r\n\r\n  navigateToHome(selectedUserName) {\r\n    this.setState({ endGame: true }, () => {\r\n      this.props.navigateToHome(selectedUserName);\r\n    });\r\n  }\r\n\r\n  convertToSeconds(time) {\r\n    let a = time.split(\":\"); // split it at the colons\r\n\r\n    // minutes are worth 60 seconds. Hours are worth 60 minutes.\r\n    let seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\r\n    return seconds;\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n    return (\r\n      (hours > 9 ? hours : \"0\" + hours) +\r\n      \":\" +\r\n      (minutes > 9 ? minutes : \"0\" + minutes) +\r\n      \":\" +\r\n      (seconds > 9 ? seconds : \"0\" + seconds)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let seconds = this.convertToSeconds(this.state.time);\r\n    let timeLeftVar = this.secondsToTime(seconds);\r\n    this.setState({ time: timeLeftVar }, () => {\r\n      this.startTimer();\r\n    });\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.convertToSeconds(this.state.time);\r\n    seconds = seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n      this.setState({ endGame: true }, ()=>{\r\n        setTimeout(()=>{this.navigateToHome(this.props.selectedUserName)}, 5000)\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Grid container>\r\n          <Grid item xs={5} >\r\n            <Typography style={{ color: \"#5a5c69\", fontSize: \"28px\" }}>\r\n              Hi {this.props.selectedUserName}!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={1} />\r\n          <Grid item xs={6} >\r\n            <Typography style={{ color: \"#5a5c69\", fontSize: \"28px\" }}>\r\n              Time Remaining [HH:MM:SS] : {this.state.time}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {\r\n          <Dialog maxWidth=\"md\" open={this.state.endGame}>\r\n            <DialogTitle>Time's Up!</DialogTitle>\r\n            {/* <DialogActions>\r\n              <Grid container>\r\n                <Grid item xs={3} />\r\n                <Grid item xs={2}>\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#2F78C4\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                    onClick={() => {\r\n                      this.navigateToHome(this.props.selectedUserName);\r\n                    }}\r\n                  >\r\n                    Ok\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={7} />\r\n              </Grid>\r\n            </DialogActions> */}\r\n          </Dialog>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","C:\\Users\\631181\\latest\\fitness-gamification\\src\\architecture.js",["137","138","139"],[],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Fragment } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport architectImage from \"./images/architect-image.png\";\r\nimport arrow_back_ios_new from \"./images/arrow_back_ios_new.svg\"\r\n\r\nclass Architecture extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Grid container style={{ display: \"block\" }}>\r\n          <img src={architectImage} style={{width: '57%'}}/>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={1} style={{ paddingTop: \"80px\", paddingLeft: \"15px\" }}>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"#2F78C4\",\r\n                textTransform: \"none\",\r\n              }}\r\n              onClick={() => {\r\n                this.props.handleBack();\r\n              }}\r\n            >\r\n              <img src={arrow_back_ios_new} />\r\n              Back\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={11} />\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Architecture;\r\n",{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":12},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"145","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":14},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":46,"column":17,"nodeType":"148","endLine":46,"endColumn":72},{"ruleId":"146","severity":1,"message":"147","line":94,"column":17,"nodeType":"148","endLine":94,"endColumn":71},{"ruleId":"146","severity":1,"message":"147","line":142,"column":17,"nodeType":"148","endLine":142,"endColumn":62},{"ruleId":"149","severity":1,"message":"150","line":59,"column":20,"nodeType":"151","messageId":"152","endLine":59,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":73,"column":17,"nodeType":"151","messageId":"152","endLine":73,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":261,"column":19,"nodeType":"148","endLine":261,"endColumn":45},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":44,"column":15,"nodeType":"148","endLine":44,"endColumn":47},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":45,"column":17,"nodeType":"148","endLine":45,"endColumn":62},{"ruleId":"146","severity":1,"message":"147","line":94,"column":17,"nodeType":"148","endLine":94,"endColumn":62},{"ruleId":"146","severity":1,"message":"147","line":143,"column":17,"nodeType":"148","endLine":143,"endColumn":62},{"ruleId":"146","severity":1,"message":"147","line":192,"column":15,"nodeType":"148","endLine":192,"endColumn":47},{"ruleId":"140","severity":1,"message":"153","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":16},{"ruleId":"140","severity":1,"message":"154","line":1,"column":18,"nodeType":"142","messageId":"143","endLine":1,"endColumn":31},{"ruleId":"149","severity":1,"message":"150","line":59,"column":20,"nodeType":"151","messageId":"152","endLine":59,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":73,"column":17,"nodeType":"151","messageId":"152","endLine":73,"endColumn":19},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":19,"column":11,"nodeType":"148","endLine":19,"endColumn":61},{"ruleId":"146","severity":1,"message":"147","line":32,"column":15,"nodeType":"148","endLine":32,"endColumn":47},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'_' is defined but never used.","'Header' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'DialogActions' is defined but never used."]