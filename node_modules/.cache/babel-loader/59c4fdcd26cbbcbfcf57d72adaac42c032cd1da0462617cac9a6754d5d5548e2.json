{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\fitness-gamification\\\\src\\\\timer.js\";\nimport { Button, DialogActions, DialogTitle, Dialog } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      time: \"00:10:05\",\n      endGame: false\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.navigateToHome = this.navigateToHome.bind(this);\n  }\n  navigateToHome() {\n    this.setState({\n      endGame: false\n    }, () => {\n      this.props.navigateToHome();\n    });\n  }\n  convertToSeconds(time) {\n    let a = time.split(\":\"); // split it at the colons\n\n    // minutes are worth 60 seconds. Hours are worth 60 minutes.\n    let seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\n    return seconds;\n  }\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n    return (hours > 9 ? hours : \"0\" + hours) + \":\" + (minutes > 9 ? minutes : \"0\" + minutes) + \":\" + (seconds > 9 ? seconds : \"0\" + seconds);\n  }\n  componentDidMount() {\n    let seconds = this.convertToSeconds(this.state.time);\n    let timeLeftVar = this.secondsToTime(seconds);\n    this.setState({\n      time: timeLeftVar\n    }, () => {\n      this.startTimer();\n    });\n  }\n  startTimer() {\n    if (this.timer == 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.convertToSeconds(this.state.time);\n    seconds = seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds)\n    });\n\n    // Check if we're at zero.\n    if (seconds == 0) {\n      clearInterval(this.timer);\n      this.setState({\n        endGame: true\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.endGame,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Time's Up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.navigateToHome();\n            },\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Timer;","map":{"version":3,"names":["Button","DialogActions","DialogTitle","Dialog","React","Fragment","jsxDEV","_jsxDEV","Timer","Component","constructor","state","time","endGame","timer","startTimer","bind","countDown","navigateToHome","setState","props","convertToSeconds","a","split","seconds","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","componentDidMount","timeLeftVar","setInterval","clearInterval","render","children","fileName","_jsxFileName","lineNumber","columnNumber","open","onClick"],"sources":["C:/Projects/Hackathon/fitness-gamification/src/timer.js"],"sourcesContent":["import { Button, DialogActions, DialogTitle, Dialog } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { time: \"00:10:05\", endGame: false };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.navigateToHome = this.navigateToHome.bind(this)\r\n  }\r\n\r\n  navigateToHome(){\r\n      this.setState({endGame: false}, ()=>{this.props.navigateToHome()})\r\n  }\r\n\r\n  convertToSeconds(time) {\r\n    let a = time.split(\":\"); // split it at the colons\r\n\r\n    // minutes are worth 60 seconds. Hours are worth 60 minutes.\r\n    let seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\r\n    return seconds;\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n    return (\r\n      (hours > 9 ? hours : \"0\" + hours) +\r\n      \":\" +\r\n      (minutes > 9 ? minutes : \"0\" + minutes) +\r\n      \":\" +\r\n      (seconds > 9 ? seconds : \"0\" + seconds)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let seconds = this.convertToSeconds(this.state.time);\r\n    let timeLeftVar = this.secondsToTime(seconds);\r\n    this.setState({ time: timeLeftVar }, () => {\r\n      this.startTimer();\r\n    });\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.convertToSeconds(this.state.time);\r\n    seconds = seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n      this.setState({ endGame: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h2>{this.state.time}</h2>\r\n        {\r\n          <Dialog open={this.state.endGame}>\r\n            <DialogTitle>Time's Up!</DialogTitle>\r\n            <DialogActions><Button onClick={()=>{this.navigateToHome()}}>Ok</Button></DialogActions>\r\n          </Dialog>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}